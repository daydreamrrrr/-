package lab17;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import static lab17.StatisticsFrame.dtm2;

/**
 *
 * @author hp
 */
public class MainFrame extends javax.swing.JFrame {

    private String connection = "jdbc:mysql://localhost:3306/lab17";
    private String user = "root";
    private String password = "";
    private DefaultTableModel dtm = new DefaultTableModel();
    private StatisticsFrame statistics = new StatisticsFrame();
    private static final Pattern amountpattern1 = Pattern.compile("\\d+\\.\\d{2}");

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        this.getContentPane().setBackground(new Color(204, 204, 255));
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        dtm.addColumn("Категорія");
        dtm.addColumn("Сума витрат");
        jTable.setModel(dtm);
        try (Connection con = DriverManager.getConnection(connection, "root", "")) {
            String sql = "SELECT * FROM Expenses";
            try (Statement st = con.createStatement()) {
                ResultSet result = st.executeQuery(sql);
                while (result.next()) {
                    dtm.addRow(new Object[]{result.getString(1), result.getString(2)});
                }
            } catch (SQLException se) {
                JOptionPane.showMessageDialog(null, "Помилка при виконанні SQL-запиту: " + se.getMessage(), "Помилка", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Помилка при підключенні: " + e.getMessage(), "Помилка", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        updateButton = new javax.swing.JButton();
        showStatisticsButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        jMenu = new javax.swing.JMenu();
        clearButton = new javax.swing.JMenuItem();
        saveButton = new javax.swing.JMenuItem();
        openButton = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Лабораторна робота №17");
        setBackground(new java.awt.Color(204, 204, 255));
        setResizable(false);

        addButton.setText("Додати");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Продукти", "Одяг та взуття", "Комунальні послуги", "Ліки", "Іншe" }));
        jComboBox.setToolTipText("");

        jLabel1.setText("Сума витрат:");

        jLabel2.setText("Виберіть категорію:");

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jTable.setCellSelectionEnabled(true);
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable);

        updateButton.setText("Оновити");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        showStatisticsButton.setText("Статистика");
        showStatisticsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showStatisticsButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Видалити");
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jMenu.setText("Файл");

        clearButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        clearButton.setText("Очистити");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        jMenu.add(clearButton);

        saveButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        saveButton.setText("Зберегти як");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        jMenu.add(saveButton);

        openButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        openButton.setText("Відкрити");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });
        jMenu.add(openButton);

        jMenuBar.add(jMenu);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                            .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(showStatisticsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(9, 9, 9)
                        .addComponent(jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showStatisticsButton)))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        try (Connection con = DriverManager.getConnection(connection, "root", "")) {
            String sql = "INSERT INTO Expenses (Category, Amount) VALUES (?, ?)";
            try (PreparedStatement preparedStatement = con.prepareStatement(sql)) {
                String category = (String) jComboBox.getSelectedItem();
                Double amount = Double.parseDouble(jTextField1.getText());
                preparedStatement.setString(1, category);
                preparedStatement.setDouble(2, amount);
                preparedStatement.executeUpdate();
                String output = String.valueOf(amount);
                dtm.addRow(new Object[]{category, output});
                System.out.println("Запис занесено в таблицю");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Помилка при записі", "Помилка", 1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Помилка при підключенні: " + e.getMessage(), "Помилка", 1);
            e.printStackTrace();
        }
    }//GEN-LAST:event_addButtonActionPerformed
   /* private double readAmount(String input) throws Exception {
        if (amountpattern1.matcher(input).matches()) {
            return Double.parseDouble(input);
        } else {
            throw new Exception("Помилка");
        }
    }
*/
    private void clear() {
        try (Connection con = DriverManager.getConnection(connection, "root", "")) {
            String sql = "TRUNCATE TABLE Expenses";
            try (Statement st = con.createStatement()) {
                st.executeUpdate(sql);
            } catch (SQLException se) {
                JOptionPane.showMessageDialog(null, "Помилка при виконанні SQL-запиту: " + se.getMessage(), "Помилка", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Помилка при підключенні: " + e.getMessage(), "Помилка", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clear();
        dtm.setRowCount(0);
        JOptionPane.showMessageDialog(null, "Таблиця очищена.", "Успішно", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        int returnVal = fc.showSaveDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = new File(fc.getSelectedFile().getAbsolutePath());
            if (!file.exists()) {
                try {
                    file.createNewFile();
                    FileWriter fl = new FileWriter(file);
                    for (int i = 0; i < dtm.getRowCount(); i++) {
                        fl.write((String) dtm.getValueAt(i, 0) + "_" + (String) dtm.getValueAt(i, 1) + "_грн_\n");
                    }
                    fl.close();
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = new File(fc.getSelectedFile().getAbsolutePath());
            String text = "";
            try {
                FileReader fr = new FileReader(file);
                int c;
                while ((c = fr.read()) != -1) {
                    text += (char) c;
                }
                String[] items = text.split("_");
                dtm.setRowCount(0);
                int j = 0;
                for (int i = 0; i < items.length / 3; i++) {
                    dtm.addRow(new Object[]{items[j], items[j + 1]});
                    j += 3;
                }
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }

    }//GEN-LAST:event_openButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        try {
            for (int i = 0; i < dtm.getRowCount(); i++) {
                Double amount = Double.parseDouble((String) dtm.getValueAt(i, 1));
            }
            try (Connection con = DriverManager.getConnection(connection, "root", "")) {
                clear();
                String sql = "INSERT INTO Expenses (Category, Amount) VALUES (?, ?)";
                try (PreparedStatement preparedStatement = con.prepareStatement(sql)) {
                    for (int i = 0; i < dtm.getRowCount(); i++) {
                        String category = (String) dtm.getValueAt(i, 0);
                        Double amount = Double.parseDouble((String) dtm.getValueAt(i, 1));
                        preparedStatement.setString(1, category);
                        preparedStatement.setDouble(2, amount);
                        preparedStatement.executeUpdate();
                    }
                    System.out.println("Запис занесено в таблицю");
                    JOptionPane.showMessageDialog(null, "Таблицю оновлено.", "Успішно", JOptionPane.INFORMATION_MESSAGE);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Помилка при записі", "Помилка", 1);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Помилка при підключенні: " + e.getMessage(), "Помилка", 1);
                e.printStackTrace();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Неправильний ввід", "Помилка", 1);
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void showStatisticsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showStatisticsButtonActionPerformed
        try (Connection con = DriverManager.getConnection(connection, "root", "")) {
            String sql = "SELECT Category, SUM(Amount) FROM Expenses GROUP BY Category";
            try (Statement st = con.createStatement()) {
                ResultSet result = st.executeQuery(sql);
                dtm2.setRowCount(0);
                while (result.next()) {
                    dtm2.addRow(new Object[]{result.getString(1), result.getString(2)});
                }
                statistics.setVisible(true);
            } catch (SQLException se) {
                JOptionPane.showMessageDialog(null, "Помилка при виконанні SQL-запиту: " + se.getMessage(), "Помилка", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Помилка при підключенні: " + e.getMessage(), "Помилка", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_showStatisticsButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (jTable.getSelectedRow() != -1) {
            dtm.removeRow(jTable.getSelectedRow());
            deleteButton.setEnabled(false);
        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        if (jTable.getSelectedRow() != -1) {
            deleteButton.setEnabled(true);
        }
    }//GEN-LAST:event_jTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JMenuItem clearButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JComboBox<String> jComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JMenuItem openButton;
    private javax.swing.JMenuItem saveButton;
    private javax.swing.JButton showStatisticsButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
